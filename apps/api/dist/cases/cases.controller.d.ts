import { CasesService } from './cases.service';
export declare class CasesController {
    private readonly cases;
    constructor(cases: CasesService);
    list(req: any, q?: string, status?: string, clientId?: string, processType?: string, page?: string, pageSize?: string, sort?: string, dir?: string): Promise<{
        total: number;
        page: number;
        pageSize: number;
        data: {
            organizationId: string;
            id: string;
            status: import("@prisma/client").$Enums.CaseStatus;
            createdAt: Date;
            updatedAt: Date;
            currency: string | null;
            title: string;
            expedienteNumber: string;
            clientId: string;
            responsibleLawyerId: string | null;
            processType: import("@prisma/client").$Enums.ProcessType;
            court: string | null;
            jurisdiction: string | null;
            description: string | null;
            startDate: Date;
            endDate: Date | null;
            billingMode: import("@prisma/client").$Enums.BillingMode | null;
            hourlyRate: import("@prisma/client/runtime/library").Decimal | null;
            fixedFee: import("@prisma/client/runtime/library").Decimal | null;
            contingencyPercent: import("@prisma/client/runtime/library").Decimal | null;
        }[];
    }>;
    get(req: any, id: string): import("@prisma/client").Prisma.Prisma__CaseClient<{
        organizationId: string;
        id: string;
        status: import("@prisma/client").$Enums.CaseStatus;
        createdAt: Date;
        updatedAt: Date;
        currency: string | null;
        title: string;
        expedienteNumber: string;
        clientId: string;
        responsibleLawyerId: string | null;
        processType: import("@prisma/client").$Enums.ProcessType;
        court: string | null;
        jurisdiction: string | null;
        description: string | null;
        startDate: Date;
        endDate: Date | null;
        billingMode: import("@prisma/client").$Enums.BillingMode | null;
        hourlyRate: import("@prisma/client/runtime/library").Decimal | null;
        fixedFee: import("@prisma/client/runtime/library").Decimal | null;
        contingencyPercent: import("@prisma/client/runtime/library").Decimal | null;
    } | null, null, import("@prisma/client/runtime/library").DefaultArgs, import("@prisma/client").Prisma.PrismaClientOptions>;
    summary(req: any, id: string): Promise<{
        case: {
            organizationId: string;
            id: string;
            status: import("@prisma/client").$Enums.CaseStatus;
            createdAt: Date;
            updatedAt: Date;
            currency: string | null;
            title: string;
            expedienteNumber: string;
            clientId: string;
            responsibleLawyerId: string | null;
            processType: import("@prisma/client").$Enums.ProcessType;
            court: string | null;
            jurisdiction: string | null;
            description: string | null;
            startDate: Date;
            endDate: Date | null;
            billingMode: import("@prisma/client").$Enums.BillingMode | null;
            hourlyRate: import("@prisma/client/runtime/library").Decimal | null;
            fixedFee: import("@prisma/client/runtime/library").Decimal | null;
            contingencyPercent: import("@prisma/client/runtime/library").Decimal | null;
        };
        kpis: {
            upcomingDeadlines: number;
            upcomingHearings: number;
            documentsCount: number;
            hoursTotal: number;
            hoursBillable: number;
            expensesTotal: number;
        };
        upcomingDeadlines: {
            type: string | null;
            id: string;
            createdAt: Date;
            updatedAt: Date;
            notes: string | null;
            title: string;
            caseId: string;
            dueAt: Date;
            priority: number | null;
            remindDays: number | null;
            completed: boolean;
            completedAt: Date | null;
            completedById: string | null;
        }[];
        upcomingHearings: {
            type: string | null;
            result: string | null;
            id: string;
            createdAt: Date;
            notes: string | null;
            caseId: string;
            date: Date;
            time: string | null;
            location: string | null;
            attendees: import("@prisma/client/runtime/library").JsonValue | null;
        }[];
        recentDocuments: ({
            currentVersion: {
                id: string;
                createdAt: Date;
                documentId: string;
                storageKey: string;
                checksum: string | null;
                size: number | null;
                mime: string | null;
                version: number;
                createdById: string | null;
            } | null;
        } & {
            name: string;
            id: string;
            createdAt: Date;
            updatedAt: Date;
            caseId: string;
            folder: string | null;
            access: string;
            tags: string[];
            currentVersionId: string | null;
        })[];
    }>;
    create(req: any, body: {
        expedienteNumber: string;
        processType: string;
        title: string;
        description?: string;
        clientId: string;
        court?: string;
        jurisdiction?: string;
        responsibleLawyerId?: string;
    }): Promise<{
        organizationId: string;
        id: string;
        status: import("@prisma/client").$Enums.CaseStatus;
        createdAt: Date;
        updatedAt: Date;
        currency: string | null;
        title: string;
        expedienteNumber: string;
        clientId: string;
        responsibleLawyerId: string | null;
        processType: import("@prisma/client").$Enums.ProcessType;
        court: string | null;
        jurisdiction: string | null;
        description: string | null;
        startDate: Date;
        endDate: Date | null;
        billingMode: import("@prisma/client").$Enums.BillingMode | null;
        hourlyRate: import("@prisma/client/runtime/library").Decimal | null;
        fixedFee: import("@prisma/client/runtime/library").Decimal | null;
        contingencyPercent: import("@prisma/client/runtime/library").Decimal | null;
    }>;
    update(req: any, id: string, body: Partial<{
        processType: string;
        title: string;
        description?: string;
        status: string;
        court?: string;
        jurisdiction?: string;
        responsibleLawyerId?: string;
    }>): Promise<{
        organizationId: string;
        id: string;
        status: import("@prisma/client").$Enums.CaseStatus;
        createdAt: Date;
        updatedAt: Date;
        currency: string | null;
        title: string;
        expedienteNumber: string;
        clientId: string;
        responsibleLawyerId: string | null;
        processType: import("@prisma/client").$Enums.ProcessType;
        court: string | null;
        jurisdiction: string | null;
        description: string | null;
        startDate: Date;
        endDate: Date | null;
        billingMode: import("@prisma/client").$Enums.BillingMode | null;
        hourlyRate: import("@prisma/client/runtime/library").Decimal | null;
        fixedFee: import("@prisma/client/runtime/library").Decimal | null;
        contingencyPercent: import("@prisma/client/runtime/library").Decimal | null;
    }>;
    remove(req: any, id: string): Promise<{
        ok: boolean;
    }>;
}
